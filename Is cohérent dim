def is_coherent_DIM(df_src, col_src, col_ref):
    """
    V√©rifie si la valeur de col_src dans df_src est identique √† la valeur de col_ref
    dans df_Dimension (m√™me ID_TITRE2).
    Retourne "OK" si c'est identique, sinon "KO".
    """

    # On ne garde que les colonnes n√©cessaires du r√©f√©rentiel dimension
    df_dim = df_Dimension[["Security ID Dimension", col_ref]].drop_duplicates(subset=["Security ID Dimension"])

    # Jointure pour retrouver la description correspondante
    df_merged = df_src.merge(
        df_dim,
        left_on="ID_TITRE2",
        right_on="Security ID Dimension",
        how="left",
        suffixes=("", "_ref")
    )

    # üîπ Ici, on compare apr√®s un nettoyage simple (espaces + casse)
    def clean_text(x):
        if x is None:
            return ""
        x = str(x).strip()           # retire espaces d√©but/fin
        x = " ".join(x.split())      # retire espaces doubles
        return x.lower()             # ignore la casse

    # Comparaison
    coherence_result = df_merged.apply(
        lambda row: "OK" if clean_text(row[col_src]) == clean_text(row[col_ref]) else "KO",
        axis=1
    )

    coherence_result.index = df_src.index
    return coherence_result
